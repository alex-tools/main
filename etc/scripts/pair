#!/usr/bin/env ruby

# Configures the git author to a list of developers when pair programming
#
# Usage: pair lm bh (Sets the author to 'Luke Melia and Bryan Helmkamp')
#        pair       (Unsets the author so the git global config takes effect)
#
# Author: Bryan Helmkamp (http://brynary.com)
# http://www.brynary.com/2008/9/1/setting-the-git-commit-author-to-pair-programmers-names

#######################################################################
## Configuration

AUTHORS = {
  "ad" => "Alan Dipert",
  "am" => "Alex Miller",
  "ao" => "Andre Ortiz",
  "ar" => "Alex Redington",
  "aw" => "Alex Warr",
  "ba" => "Brenton Ashworth",
  "bb" => "Brandon Bloom",
  "bc" => "Bobby Calderwood",
  "bv" => "Ben Vandgrift",
  "ca" => "Craig Andera",
  "cd" => "Clinton Dreisbach",  
  "cm" => "Carin Meier",
  "cr" => "Chris Redinger",
  "dc" => "David Chelimsky",
  "dm" => "Daemian Mack",
  "dn" => "David Nolen",
  "gh" => "Gabriel Horner",
  "gs" => "Ghadi Shayban",
  "jd" => "Jon Distad",
  "jg" => "Justin Gehtland",
  "jh" => "Jan Herich",
  "jk" => "Jamie Kite",
  "jm" => "Jen Myers",
  "jam" => "Jen Myers",
  "jp" => "Jared Pace",
  "jr" => "Jason Rudolph",
  "js" => "Joe Smith",
  "ka" => "Kevin Altman",
  "kn" => "Kevin Neaton",
  "ke" => "Kelly Ehret",
  "ld" => "Lake Denman",
  "lk" => "Larry Karnowski",
  "lv" => "Luke VanderHart",
  "ma" => "Muness Alrubaie",
  "mf" => "Michael Fogus",
  "mn" => "Michael Nygard",
  "mp" => "Michael Parenteau",
  "nm" => "Nelson Morris",
  "pd" => "Paul deGrandis",
  "rh" => "Rich Hickey",
  "rn" => "Ryan Neufeld",
  "ro" => "Russ Olsen",
  "sh" => "Stuart Halloway",
  "ss" => "Stuart Sierra",
  "su" => "Sam Umbach",
  "tb" => "Timothy Baldridge",
  "te" => "Tim Ewald",
  "yh" => "Yoko Harada",
}

## End of configuration
#######################################################################

def to_sentence(things)
  if things.size < 3
    things.join(" and ")
  else
    "#{things.first}, #{to_sentence(things.drop(1))}"
  end
end

def git_config_set(name, value)
  `git config "#{name}" "#{value}"`
  puts "#{name} = \"#{value}\""
end

def git_config_unset(name)
  `git config --unset "#{name}"`
  puts "Unset #{name}"
end

unless File.exists?(".git")
  abort "This doesn't look like a git repository."
end

initials = ARGV.map(&:downcase).map(&:strip).reject(&:empty?).uniq.sort

authors = initials.map do |initial|
  AUTHORS[initial] or abort("Couldn't find author name for initials: #{initial}")
end

if authors.any?
  pair_email = "pair+#{initials.join('+')}@cognitect.com"

  git_config_set('user.name', to_sentence(authors))
  git_config_set('user.initials', initials.join('/'))
  git_config_set('user.email', pair_email)
else
  git_config_unset('user.name')
  git_config_unset('user.initials')
  git_config_unset('user.email')
end
